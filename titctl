#!/bin/bash

make_todo_list()
{
	subjects=(ИТ
		ОСиС
		ЭВМ
		ДМ
		ОАиП
		"Основы экономики"
		"Психология общения"
		"Культура речи")

	for day in ${TIT_DIR}/$date_patter
	do
		while read lection
		do
			if [[ ! $(grep "$lection" "$BD") ]]; then
				prefix=$(basename "$(dirname "$lection")")
				if [[ "${prefix}" != ${date_patter} ]]; then
					pprefix="$(basename "$(dirname "$(dirname "$lection")")") "
					pprefix+=${prefix}
					prefix=${pprefix}
				fi
				subj="$(basename "${lection}")"
				for (( i = 0; i < ${#subjects[@]}; i++ ))
				do
					if [[ -n "$(grep -i "${subjects[$i]}" <<< "$subj")" ]]; then
						subj="${subjects[$i]}.${subj##*.}"
					fi
				done
				prefix+=" ${subj}"
				ln -s "${lection}" "${TODO_DIR}/${prefix}" &&
					echo "${lection}" >> "${BD}"
				printf "Added "$(basename "$lection")"\n"
			fi
		done <<< $(find "$day" \( ! -regex '.*/\..*' \) -type f)
	done
}

make_listdb()
{
	i=0
	while read file
	do
		base=$(basename "${file}")
		date="$(echo ${base} | grep -o "^${date_patter}")"
		lection="$(echo ${base} | sed "s/${date_patter}//g")"
		size="$(wc -l "${file}" | cut -d' ' -f 1)"
		printf "%3q %12q " "${i}" "${date}"
		printf "%4q" "${size}"
		printf "${lection}\n"
		let i++
	done <<< $(find "${TODO_DIR}" \( ! -regex '.*/\..*' \) -type l | sort -k1)
} > "${listdb}"

list()
{
		printf "\033[1m"
		printf "%3q %12q %4q %1q\n" "ID" "Date" "Size" "Lection"
		printf "\033[36m"
		cat "${listdb}"
}

make_colorized_list()
{
	i=0
	printf "%3q %12q %4q %1q\n" "ID" "Date" "Size" "Lection"
	while read file
	do
		normal='\x1b[0m'
		fg='\x1b[30m'
		bg='\x1b[47m'
		atr='\x1b[1m'
		if (( $i % 2 == 0 )); then
			col=1
			printf "${fg}${bg}${art}"
		else
			col=0
			printf "${normal}"
		fi

		linelen=0
		base=$(basename "${file}")
		date="$(echo ${base} | grep -o "^${date_patter}")"
		lection="$(echo ${base} | sed "s/${date_patter}//g")"

		lid=${#id}
		ldate=${#date}
		llection=${#lection}
		size="$(wc -l "${file}" | cut -d' ' -f 1)"
		linelen=$((${#id}+2 + ${#date}+3 + ${#lection}+1 + 5))
		printf "%3q %12q " "${i}" "${date}" 
		if (( ${size} < 100 )); then
			printf "\x1b[32m"
		elif (( ${size} > 100 )) && (( ${size} < 1000 )); then
			printf "\x1b[33m"
		elif (( ${size} > 1000 )); then
			printf "\x1b[31m"
		fi
		printf "%4q" "${size}"
		(( ${col} == 1 )) && printf "${fg}" || printf "$normal"
		printf "${lection}"
		
		j=linelen
		tp=$(( $(tput cols) - j ))
		(( $col == 1 )) && for null in $(seq ${tp}); do
			printf " "
		done
		printf "${normal}"
		printf "\n"
		let i++
	done <<< $(find "${TODO_DIR}" \( ! -regex '.*/\..*' \) -type l | sort -k1) #-k1

	printf "\n${i} Tasks\t\t%q Done\n" "$(grep -E '.docx|.pdf|.DOCX' ${BD} | wc -l)"
	printf "\x1b[0m"
} > ${currentlist}

colorized_list()
{
	make_colorized_list
	cat ${currentlist}
}

TIT_DIR="${HOME}/Documents/TIT"
TODO_DIR="${TIT_DIR}/toDo"
ARCHIVE_DIR="${TIT_DIR}/Archive"
BD="$TODO_DIR/.db"
listdb="${TIT_DIR}/.listdb"
listhash="${TIT_DIR}/.hash"
currentlist="${TIT_DIR}/.list"
date_patter=[0-9][0-9].[0-9][0-9].20[0-9][0-9]

make_listdb

OPTSET="a:gmo:lr:"
while getopts ${OPTSET} OPT
do
	case ${OPT} in
		a)
			zip="${OPTARG}"
			name=$(unzip -l "${zip}" | awk 'NR == 4 {print $NF}' | sed 's/\///g')
			[[ -r "${zip}" ]] && unzip "${zip}"
			mv "${zip}" "${ARCHIVE_DIR}/${zip}"
			mv "${name}" "${TIT_DIR}/$(date '+%m.%d.%Y')"

			exit 0
			;;
		m)
			make_todo_list
			exit 0
			;;
		l)
			shift
			if [[ $1 == nc ]]; then
				list
			else
				colorized_list
			fi

			exit 0
			;;
		o)
			id=${OPTARG}
			if ! [[ ${id} =~ [0-9] ]]; then
			       echo "Error: invalide ID: $id"
			       exit 1
			fi
			date="$(awk -v num=${id} 'NR > 1 && $1 == num {print $2}' "${listdb}")"
			name="$(awk -v num=${id} 'NR > 1 && $1 == num {for (i=4; i<NF; i++) printf $i " "; print $NF}' "${listdb}")"
			tmp="${date} ${name}"
			file="$(find "${TODO_DIR}" -name "$tmp")"
			if ! [[ -f "${file}" ]]; then
				echo "No such file: $file"
				exit 1
			fi
			sufix=${name##*.}
			printf "Opening \"%q\" lection" "${name%.${sufix}} date: ${date}"
			xdg-open "${file}" &>/dev/null &

			exit 0
			;;
		r)
			id=${OPTARG}
			if ! [[ ${id} =~ [0-9] ]]; then
			       echo "Error: invalide ID: $id"
			       exit 1
			fi
			date="$(awk -v num=${id} 'NR > 1 && $1 == num {print $2}' "${listdb}")"
			name="$(awk -v num=${id} 'NR > 1 && $1 == num {for (i=4; i<NF; i++) printf $i " "; print $NF}' "${listdb}")"
			tmp="${date} ${name}"
			echo $tmp
			file="$(find "${TODO_DIR}" -name "$tmp")"
			if ! [[ -f "${file}" ]]; then
				echo "No such file: $file"
				exit 1
			fi
			printf "Are you sure to delete %q lection on %q? [yN] " "$name" "$date"
			read yn
			case $yn in
				[yY])
					rm "${file}"
					printf "Deletion successfully complited\n"
					;;
				[nN])
					printf "Aborting\n"
					;;
				*)
					printf "Aborting\n"
					;;
			esac

			exit 0
			;;
		h)
			usage
			exit 1
			;;
	esac
done

colorized_list
